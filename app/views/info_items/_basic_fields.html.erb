  <% if item.vendor %>
    <div id="field">
      <b><%= item.vendor.name %></b>
      <%= hidden_field_tag "#{item.class.name.downcase}[vendor_token]", item.vendor.id %>
      <%= hidden_field_tag "#{item.class.name.downcase}[city]", item.vendor.city %>
      <%= hidden_field_tag "#{item.class.name.downcase}[street]", item.vendor.street %>
      <!--for testing -->
      <%= hidden_field_tag "#{item.class.name.downcase}[vendor_name]", item.vendor.name %>
    </div>
  <% else %>
      <b><%= t("location.city") %></b>
      <%= content_tag(:span, current_city.name, :id => "current_city_name") %>
      <%= hidden_field_tag "#{item.class.name.downcase}[city]", current_city.name%>
  <% end %>

  <div class="field">
    <b><%= f.label :title, t("general.title") %><%= mark_required(item, :title) %><%= mark_required_length(item, :title) %></b><br/>
    <%= f.text_field :title, :maxlength => get_max_length(item, :title) %>
  </div>
  <div class="field">
     <b><%= f.label :tags_string, t("info_items.tags") %></b><br/>
     <%= f.text_field :tags_string, 'data-pre' => (item.tags ? item.tags.map { |t| { :id => t, :name => t }} : []).to_json %>
  </div>
  <div class="field">
    <b><%= f.label :reported_on_string, t("general.date") %></b><br/>
    <%= f.text_field :reported_on_string, {:class => "date_picker"} %>
  </div>

  <% if item.is_a?(Review) %>
      <div class="field">
        <b><%= f.label :faults, t("reviews.faults") %></b><br/>
            <div class="checkbox_group">
                <% FaultTypes.get_values.each_with_index do |type, i| %>
                    <%= check_box_tag "#{item.class.name.downcase}[faults][]", type, item.faults.include?(type), {:id => "#{item.class.name.downcase}_faults_#{i}", :class => "checkbox" } %>
                    <%= label_tag "#{item.class.name.downcase}_faults_#{i}", type %>
                <% end %>
            </div>
      </div>
  <% end %>

  <%= render "images/images_fields", :f => f, :item => item %>

  <div class="field">
    <b><%= f.label :content, t("reviews.content") %><%= mark_required(item, :content) %><%= mark_required_length(item, :content) %></b><br/>
    <%= f.text_area :content, :class => "rich_editor", :maxlength => get_max_length(item, :content) %>
  </div>