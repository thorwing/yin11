<%= form_for @review, :html => { :multipart => true } do |f| %>
    <%= render "shared/error_messages", :target => @review %>
    <div class="block round">
        <b><%= f.label :title, t("general.title") %><%= mark_required(@review, :title) %><%= mark_required_length(@review, :title) %></b><br/>
        <%= f.text_field :title, :maxlength => get_max_length(@review, :title) %>
    </div>

    <div class="block round">
        <b><%= f.label :tags_string, t("reviews.what") %></b><%= content_tag(:span, t("reviews.what_tip"), :class => "trivial") %><br/>
        <%= f.text_field :tags_string, 'data-pre' => (@review.tags ? @review.tags.map { |t| { :id => t, :name => t }} : []).to_json %>
    </div>

    <div class="block round">
        <b><%= t("reviews.where") %></b><br/>
        <% if @review.vendor %>
            <div><%= render "vendor_fields", :vendor => @review.vendor %></div>
        <% else %>
        <div id="vendor_fields">
            <%= f.text_field :vendor_token, 'data-pre' => (@review.vendor ? [{:id => @review.vendor.id, :name => @review.vendor.full_name }] : []).to_json %>
            <%= content_tag(:span, t("vendors.not_found"), :class => "trivial") %><br/>
            <%= link_to t("vendors.new"), new_vendor_path(:popup => true), :rel => "facebox", :class => "button" %>
         </div>
        <% end %>
     </div>

    <div class="block round">
        <b><%= f.label :reported_on_string, t("reviews.when") %></b><br/>
        <%= f.text_field :reported_on_string, {:class => "date_picker"} %>
    </div>


    <div class="block round">
        <b><%= f.label :faults, t("reviews.whats_wrong") %></b><br/>
        <div class="checkbox_group">
            <% FaultTypes.get_values.each_with_index do |type, i| %>
                <% check_fault(type, i) %>
            <% end %>
        </div>
    </div>

    <%= render "images/images_fields", :f => f, :item => @review %>

    <b><%= f.label :content, t("reviews.content") %><%= mark_required(@review, :content) %><%= mark_required_length(@review, :content) %></b><br/>
    <%= f.text_area :content, :maxlength => get_max_length(@review, :content) %>


    <div class="actions">
        <%= f.submit t("general.submit"), :class => "button" %>
    </div>
<% end %>

<%= render "info_items/delay_load_stuff", :item => @review %>
